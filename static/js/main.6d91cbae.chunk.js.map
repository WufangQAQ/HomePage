{"version":3,"sources":["component/mdDemo.jsx","App.jsx","index.js"],"names":["require","Provider","Node","tex","String","raw","MdDemo","props","renderCanvasDemo","state","width","height","canvas","document","getElementById","ctx","getContext","me","size","x","y","vx","vy","draw","font","textAlign","fillText","this","drawWall","len","i","addEventListener","event","keyDown","key","clearRect","console","log","devicePixelRatio","window","vm","sWidth","sHeight","id","inline","style","fontSize","fontFamily","tabIndex","border","React","Component","App","whiteSpace","ReactDOM","render"],"mappings":"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","file":"static/js/main.6d91cbae.chunk.js","sourcesContent":["import React from 'react';\r\nimport { marked } from 'marked';\r\n// import MathJax from '@nteract/mathjax';\r\nconst { Provider, Node } = require('@nteract/mathjax');\r\n\r\n// const tex = String.raw(`f(x) = \\int_{-\\infty}^\\infty\r\n//     \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\r\n//     \\,d\\xi`);\r\nconst tex = String.raw`\\frac{actual}{min(x+y+z)}`;\r\n\r\nclass MdDemo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 400,\r\n      height: 360,\r\n      devicePixelRatio: window.devicePixelRatio || 1,\r\n    };\r\n\r\n    window.vm = this\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.renderMD();\r\n    this.renderCanvasDemo();\r\n  }\r\n\r\n  // renderMD = () => {\r\n  //   // const mdHtml = marked.parse('## title');\r\n  //   const mdHtml = marked.parse('test', {\r\n  //     baseUrl: '/assets/md/first-md.md',\r\n  //   });\r\n  //   // document.getElementById('content').innerHTML = mdHtml;\r\n  //   return mdHtml;\r\n  // };\r\n\r\n  renderCanvasDemo = () => {\r\n    const self = this;\r\n    const { width, height } = self.state;\r\n    const id = 'canvas-demo1';\r\n    let canvas = document.getElementById(id);\r\n    let ctx = canvas.getContext('2d');\r\n    let me = {\r\n      size: 20,\r\n      x: 20,\r\n      y: 36,\r\n      vx: 20,\r\n      vy: 18,\r\n      draw: function () {\r\n        ctx.font = '20px arial';\r\n        ctx.textAlign = 'start';\r\n        ctx.fillText('我', this.x, this.y); // 文字内容的左下角为文字的起点\r\n      },\r\n    };\r\n    me.draw();\r\n\r\n    const draw = (event) => {\r\n      let keyDown = event.key;\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      switch (keyDown) {\r\n        case 'ArrowUp':\r\n          // me.y - me.vy < 36 ? (me.y = 36) : (me.y = me.y - me.vy);\r\n          if (me.y - me.vy < 36) {\r\n            me.y = 36;\r\n            drawWall(0, 18, 20, 0, width / me.vx);\r\n          } else {\r\n            me.y = me.y - me.vy;\r\n          }\r\n          break;\r\n        case 'ArrowDown':\r\n          if (me.y - me.vy > 306) {\r\n            me.y = 342;\r\n            drawWall(0, 360, 20, 0, width / me.vx);\r\n          } else {\r\n            me.y = me.y + me.vy;\r\n          }\r\n          break;\r\n        case 'ArrowLeft':\r\n          if (me.x - me.vx < 20) {\r\n            me.x = 20;\r\n            drawWall(0, 18, 0, 18, height / me.vy);\r\n          } else {\r\n            me.x = me.x - me.vx;\r\n          }\r\n          break;\r\n        case 'ArrowRight':\r\n          me.x - me.vx > 320 ? (me.x = 360) : (me.x = me.x + me.vx);\r\n          if (me.x - me.vx > 320) {\r\n            me.x = 360;\r\n            drawWall(380, 18, 0, 18, height / me.vy);\r\n          } else {\r\n            me.x = me.x + me.vx;\r\n          }\r\n          break;\r\n        default:\r\n          console.log(keyDown);\r\n          break;\r\n      }\r\n\r\n      me.draw();\r\n    };\r\n\r\n    const drawWall = (x, y, vx, vy, len) => {\r\n      ctx.font = '20px arial';\r\n      for (let i = 0; i < len; i++) {\r\n        ctx.fillText('墙', x + vx * i, y + vy * i);\r\n      }\r\n      ctx.fillText('哦对了，这里是一堵墙', 160, 180);\r\n    };\r\n\r\n    // 键盘事件只有能聚焦的元素才生效，否则会升级到父元素上面，所以再canvas上添加了tabIndex=\"0\"\r\n    canvas.addEventListener('keydown', (event) => {\r\n      draw(event);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { width, height, devicePixelRatio } = this.state;\r\n    let sWidth = width / devicePixelRatio;\r\n    let sHeight = height / devicePixelRatio;\r\n    return (\r\n      <div id=\"content\">\r\n        <Provider>\r\n          <p>\r\n            This is an inline math formula: <Node inline>{tex}</Node>\r\n            <span> and a block one:</span>\r\n            <Node>{`a = {x^2 - y^3}/3`}</Node>\r\n          </p>\r\n          <span style={{ fontSize: 16, fontFamily: 'arial' }}>我</span>\r\n        </Provider>\r\n        {/* 当分辨率有进行缩放的时候，在canvas中绘制的内容就会出现精度不够模糊的情况，所以要进行样式上的缩放来调整 */}\r\n        <canvas\r\n          id=\"canvas-demo1\"\r\n          tabIndex=\"0\"\r\n          width={width}\r\n          height={height}\r\n          style={{ width: sWidth, height: sHeight, border: '1px solid #666' }}\r\n        ></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MdDemo;\r\n","import React from \"react\";\r\nimport MdDemo from \"./component/mdDemo\";\r\n// import { BrowserRouter, Route } from \"react-router-dom\";\r\nconst App = () => {\r\n  console.log('####    origin: https://github.com/wufang95/wufang95.github.io    ####')\r\n  return <div style={{whiteSpace: 'pre-line'}}>\r\n    {'CUSTOM WEBSET DEMO\\nFIRST CHANGE'}\r\n    <MdDemo />\r\n  </div>;\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import \"./scss/custom.scss\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}